@namespace POS.BackOffice.Web.Pages.Templates

@inject NavigationManager NavManager
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.QueryBuilder
@using Syncfusion.Blazor.Navigations
@using System.Dynamic
@using System.Text.RegularExpressions;
@using POS.BackOffice.Web.Services
@using POS.BackOffice.Web.Pages.Components

@typeparam TValue

<PageTitle>@TemplatePageConfig.PageTitle</PageTitle>
<ConfirmDeleteDialog @ref="Dialog"
                     OnCloseCallback="@ClosedDialogCallback"
                     OnConfirmCallback="@ConfirmDialogCallback"></ConfirmDeleteDialog>
<!-- BEGIN: Content-->
<div class="app-content content ">
    <div class="content-overlay"></div>
    <div class="header-navbar-shadow"></div>
    <div class="content-wrapper">
        <div class="content-header row">
            <div class="content-header-left col-md-9 col-12 mb-2">
                <div class="row breadcrumbs-top">
                    <div class="col-12">
                        <h2 class="content-header-title float-start mb-0">@TemplatePageConfig.PageName</h2>
                        @if (TemplatePageConfig != null && TemplatePageConfig.Breadcrumb.Count > 0)
                        {
                            <div class="breadcrumb-wrapper">
                                <SfBreadcrumb class="breadcrumb">
                                    <BreadcrumbItems>
                                        @foreach (var kv in TemplatePageConfig.Breadcrumb)
                                        {
                                            <BreadcrumbItem Text="@kv.Key" Url="@kv.Value" />
                                        }
                                    </BreadcrumbItems>
                                    <BreadcrumbTemplates>
                                        <SeparatorTemplate>
                                            <span class="e-icons e-chevron-right-small e-breadcrumb-separator-icon"></span>
                                        </SeparatorTemplate>
                                    </BreadcrumbTemplates>
                                </SfBreadcrumb>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="content-body">
            <div class="row">
                <div class="col-12">
                    <div class="py-2">
                        <div class="border-end d-inline-flex pe-50">
                            <button type="button" class="btn btn-flat-primary me-25 d-flex align-items-center" @onclick="@OnRedirectToCreatePage">
                                <i class="far fa-file me-25"></i>
                                <span>เพิ่ม</span>
                            </button>
                            <button type="button" class="btn btn-flat-primary me-25 d-flex align-items-center" @onclick="@OnRedirectToUpdatePage" disabled="@isDisabled">
                                <i class="fas fa-edit me-25"></i>
                                <span>แก้ไข</span>
                            </button>
                            <button type="button" class="btn btn-flat-primary d-flex align-items-center" @onclick="@OnDeleteData" disabled="@isDisabled">
                                <i class="fa fa-times-circle me-25"></i>
                                <span>ยกเลิก</span>
                            </button>
                        </div>
                        <div class="border-end d-inline-flex pe-50">
                            <button type="button" class="btn btn-flat-primary me-25 d-flex align-items-center">
                                <i class="fa fa-file-import me-25"></i>
                                <span>นำข้อมูลเข้า</span>
                            </button>
                            <button type="button" class="btn btn-flat-primary me-25 d-flex align-items-center" @onclick="@OnExportExcelCallback">
                                <i class="fa fa-file-export me-25"></i>
                                <span>ส่งข้อมูลออก</span>
                            </button>
                            <button type="button" class="btn btn-flat-primary d-flex align-items-center" @onclick="@OnPrintCallback">
                                <i class="fa fa-print me-25"></i>
                                <span>พิมพ์</span>
                            </button>
                        </div>
                        <div class="d-inline-flex pe-50">
                            <a class="btn btn-flat-primary me-25 d-flex align-items-center"
                               data-bs-toggle="offcanvas" href="#dataFilter" role="button"
                               aria-expanded="false" aria-controls="dataFilter">
                                <i class="fa fa-filter me-25"></i>
                                <span>กรองข้อมูล</span>
                            </a>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <div class="h4">
                                <a href="#" class="dropdown-toggle" id="dropdownMenuButton"
                                   data-bs-toggle="dropdown" aria-expanded="false">
                                    Default View
                                    <i class="fa fa-chevron-down fa-xs ms-50"></i>
                                </a>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                    <a class="dropdown-item" href="#">
                                        <div class="d-flex align-item-center">
                                            <div class="me-2">Default View</div>
                                            <i class="fa fa-lock text-muted ms-auto" aria-disabled="true"></i>
                                        </div>
                                    </a>
                                    <div class="dropdown-divider"></div>
                                    <div class="row">
                                        <div class="col">
                                            <a class="dropdown-item" data-bs-toggle="offcanvas"
                                               data-bs-target="#myOffcanvas" href="#">
                                                <div class="d-flex align-item-center">
                                                    <div class="me-2">
                                                        <i class="fa fa-save text-muted ms-auto"
                                                           aria-disabled="true"></i> บันทึก
                                                    </div>
                                                </div>
                                            </a>
                                        </div>
                                        <div class="col">
                                            <a class="dropdown-item" data-bs-toggle="offcanvas"
                                               data-bs-target="#offcanvasScroll" aria-controls="offcanvasScroll"
                                               href="#">
                                                <div class="d-flex align-item-center">
                                                    <div class="me-2">
                                                        <i class="fa fa-save text-muted ms-auto"
                                                           aria-disabled="true"></i> บันทึก เป็น...
                                                    </div>
                                                </div>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-12">
                                    <DataGrid @ref="grid"
                                              TValue="TValue"
                                              Query="@query"
                                              DataGridConfig="DataGridConfig"
                                              DataGridColumns="DataGridColumns"
                                              OnSelectedRowCallback="@OnSelectedRowCallback"
                                              OnDeselectedRowCallback="@OnDeselectedRowCallback"></DataGrid>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- END: Content-->
<DataFilter @ref="filter"
            TValue="TValue"
            DataFilterColumns="DataFilterColumns"
            OnApplyFilterCallback="@ApplyFilterCallback"
            OnUpdateFilterRuleCallback="@UpdateFilterRule"></DataFilter>
@code
{
    [Parameter] public TemplatePageConfig TemplatePageConfig { get; set; }

    [Parameter] public Query DataGridQuery { get; set; }
    [Parameter] public DataGridConfig DataGridConfig { get; set; }
    [Parameter] public List<DataGridColumn> DataGridColumns { get; set; }
    [Parameter] public List<DataFilterColumn> DataFilterColumns { get; set; }

    [Parameter] public EventCallback<string> OnDeleteDataCallback { get; set; }
    [Parameter] public EventCallback<WhereFilter> OnUpdateFilterRuleCallback { get; set; }

    // Private data
    private string pkData { get; set; }
    private bool isDisabled { get; set; }

    // Grid
    private DataGrid<TValue> grid { get; set; }

    // Filter
    private DataFilter<TValue> filter { get; set; }
    private Query query { get; set; }
    private void ApplyFilterCallback()
    {
        query = DataGridQuery;
    }
    private async void UpdateFilterRule(RuleChangeEventArgs args)
    {
        await OnUpdateFilterRuleCallback.InvokeAsync(filter.GetPredicate());
    }

    // Confirm Dialog
    ConfirmDeleteDialog Dialog;
    public bool showedDialog = false;

    protected void ClosedDialogCallback()
    {
        showedDialog = false;
    }

    protected async Task ConfirmDialogCallback()
    {
        await OnDeleteDataCallback.InvokeAsync(pkData);
        Dialog.Hide();
    }

    protected void OnDeleteData()
    {
        if (!showedDialog)
        {
            Dialog.Show();
            showedDialog = true;
        }
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        this.isDisabled = true;
        this.query = DataGridQuery;
    }

    public async Task GridRefresh()
    {
        await grid.Refresh();
    }

    protected void OnSelectedRowCallback(string data)
    {
        this.isDisabled = false;
        this.pkData = data;
    }

    protected void OnDeselectedRowCallback()
    {
        this.isDisabled = true;
    }

    protected async void OnExportExcelCallback(MouseEventArgs args)
    {
        await grid.ExportExcel();
    }

    protected async void OnPrintCallback(MouseEventArgs args)
    {
        await grid.Print();
    }

    protected void OnRedirectToCreatePage()
    {
        this.RedirectToInfoPage(string.Empty);
    }

    protected void OnRedirectToUpdatePage()
    {
        this.RedirectToInfoPage(this.pkData);
    }

    protected void RedirectToInfoPage(string id)
    {
        string mode = string.Empty;
        if (string.IsNullOrEmpty(id))
        {
            mode = BaseService.ModeCreate();
        }
        else
        {
            mode = BaseService.ModeUpdate();
        }
        NavManager.NavigateTo(Regex.Replace(Path.Combine(TemplatePageConfig.InfoPageRoute, mode, id).Replace("\\", "//"), @"/+", @"/"), false);
    }
}